package com.gtan.niosocket;

import java.nio.channels.*;
import java.nio.channels.spi.*;
import java.io.*;
import java.util.*;
import java.net.*;
import java.nio.*;

public class Server {
    public static void main(String args[]) {

	SelectorProvider selectorProvider = SelectorProvider.provider();
	try {
	    Selector selector = Selector.open();
	    ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();
	    serverSocketChannel.configureBlocking(false);
	    InetSocketAddress inetSocketAddress = new InetSocketAddress(9999);
	    ServerSocket serverSocket = serverSocketChannel.socket();
	    serverSocket.bind(inetSocketAddress);
	    serverSocketChannel.register(selector,SelectionKey.OP_ACCEPT);
//	    Set<SelectionKey> set = selector.keys();
//	    System.out.println(set.size());
	    while(true) {
		selector.select();
		Set<SelectionKey> selectionKeys = selector.selectedKeys();
		Iterator<SelectionKey> iterator = selectionKeys.iterator();
		ByteBuffer echoBuffer = ByteBuffer.allocate(20);	
		SocketChannel socketChannel = null;
		System.out.println("+++++++++++++++");
		while(iterator.hasNext()) {
		    SelectionKey key = iterator.next();
		    try {
			if((key.readyOps()&SelectionKey.OP_ACCEPT)==SelectionKey.OP_ACCEPT) {
//			    System.out.println("===================");
			    ServerSocketChannel subServerSocketChannel = (ServerSocketChannel) key.channel();
			    socketChannel = subServerSocketChannel.accept();
			    socketChannel.configureBlocking(false);
			    socketChannel.register(selector,SelectionKey.OP_READ);	    
			    iterator.remove();
//			    System.out.println("socketChannel=: "+socketChannel);
			    System.out.println("key=: "+key);
//			    System.out.println("有新连接: "+socketChannel);
			} else if ((key.readyOps()&SelectionKey.OP_READ)==SelectionKey.OP_READ) {
			    socketChannel = (SocketChannel)key.channel();
			    while(true) {
				echoBuffer.clear();
				int a = socketChannel.read(echoBuffer);
				if(a==-1)  break;
				if(a>0) {
//	             	            System.out.println("socketChannel=: "+socketChannel);
                                    System.out.println("key=: "+key);
				
				    byte[] b = echoBuffer.array();
				    System.out.println("接收数据："+new String(b));
				    echoBuffer.flip();
				    socketChannel.write(echoBuffer);
				    System.out.println("发送数据："+new String(b));
				}
			    }
			    socketChannel.close();
//			    System.out.println("链接结束----------------");
			    iterator.remove();			     				    
			}
		    }catch(CancelledKeyException e) {
			e.printStackTrace();
		    }
		}
	    }
	}catch(IOException e) {
	    e.printStackTrace();
	}
    }
} 
